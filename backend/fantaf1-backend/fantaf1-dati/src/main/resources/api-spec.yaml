openapi: 3.0.3
info:
  title: FantaF1 Dati API
  description: API per la gestione dei dati piloti, scuderie e circuiti della FantaFormula 1
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Server di sviluppo locale

paths:
  /piloti:
    get:
      summary: Restituisce la lista dei piloti per un anno specifico
      operationId: getPilotiByAnno
      tags:
        - Piloti
      parameters:
        - name: anno
          in: query
          description: Anno della stagione da filtrare
          required: true
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Lista piloti recuperata con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pilota"

  /piloti/{id}:
    get:
      summary: Restituisce i dettagli di un pilota tramite ID interno
      operationId: getPilotaById
      tags:
        - Piloti
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Dettaglio pilota recuperato con successo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilota"
    post:
      summary: Aggiorna il costo del pilota tramite ID
      operationId: updatePilotCostById
      tags:
        - Piloti
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AggiornaCostoRequest"
      responses:
        "200":
          description: Costo del pilota aggiornato con successo

  /piloti/by-season-and-driver:
    get:
      summary: Restituisce i dettagli di un pilota dato l'anno e il driver_id
      operationId: getPilotaBySeasonAndDriverId
      tags:
        - Piloti
      parameters:
        - name: anno
          in: query
          required: true
          schema:
            type: integer
            example: 2025
        - name: driver_id
          in: query
          required: true
          schema:
            type: string
            example: "max_verstappen"
      responses:
        "200":
          description: Dettaglio pilota recuperato con successo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pilota"
    post:
      summary: Aggiorna il costo del pilota tramite anno e driver_id
      operationId: updatePilotCostBySeasonAndDriver
      tags:
        - Piloti
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AggiornaCostoSeasonDriverRequest"
      responses:
        "200":
          description: Costo del pilota aggiornato con successo

  /piloti/con-costo:
    get:
      summary: Restituisce la lista dei piloti con costo per un anno specifico
      operationId: getPilotiConCostoByAnno
      tags:
        - Piloti
      parameters:
        - name: anno
          in: query
          description: Anno della stagione da filtrare
          required: true
          schema:
            type: integer
            example: 2025
      responses:
        "200":
          description: Lista piloti con costo recuperata con successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PilotaConCosto"

  /gare/prossima-gara:
    get:
      summary: Restituisce la prossima gara con tutte le sue sessioni
      operationId: getNextRaceWithSessions
      tags:
        - Gare
      responses:
        "200":
          description: Dettaglio della prossima gara recuperato con successo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NextRaceResponse"

components:
  schemas:
    Pilota:
      type: object
      properties:
        id:
          type: integer
          example: 1
        driver_id:
          type: string
          example: "max_verstappen"
        sigla:
          type: string
          example: "VER"
        nome:
          type: string
          example: "Max"
        cognome:
          type: string
          example: "Verstappen"
        numero:
          type: integer
          format: int32
          example: 33
        nazionalita:
          type: string
          example: "Paesi Bassi"
    AggiornaCostoRequest:
      type: object
      properties:
        nuovoValore:
          type: integer
          example: 47

    AggiornaCostoSeasonDriverRequest:
      type: object
      properties:
        anno:
          type: integer
          example: 2025
        driver_id:
          type: string
          example: "max_verstappen"
        nuovoValore:
          type: integer
          example: 47

    PilotaConCosto:
      type: object
      properties:
        pilota:
          $ref: "#/components/schemas/Pilota"
        costo:
          type: integer
          example: 47

    NextRaceResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        raceName:
          type: string
          example: "Australian Grand Prix"
        circuitName:
          type: string
          example: "Albert Park Grand Prix Circuit"
        country:
          type: string
          example: "Australia"
        dateTimeRace:
          type: string
          format: date-time
        urlWikipedia:
          type: string
          example: "https://en.wikipedia.org/wiki/2025_Australian_Grand_Prix"
        sessions:
          type: array
          items:
            $ref: "#/components/schemas/RaceSessionResponse"

    RaceSessionResponse:
      type: object
      properties:
        sessionType:
          type: string
          example: "QUALIFYING"
        sessionDateTime:
          type: string
          format: date-time